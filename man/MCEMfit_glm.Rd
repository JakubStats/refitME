% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/refitME_package.R
\name{MCEMfit_glm}
\alias{MCEMfit_glm}
\title{Function for wrapping the MCEM algorithm on \code{lm} or \code{glm} objects}
\source{
See \url{https://github.com/JakubStats/refitME} for an RMarkdown tutorial with examples.
}
\usage{
MCEMfit_glm(
  mod,
  family,
  sigma.sq.u,
  sigma.sq.e = 1,
  B = 50,
  epsilon = 1e-05,
  silent = FALSE,
  theta.est = 1,
  shape.est = 1,
  ...
)
}
\arguments{
\item{mod}{: a \code{lm/glm} object (this is the naive fitted model). Make sure the first \eqn{p} input predictor variables entered in the naive model are the specified error-contaminated variables. These \eqn{p} predictors also need the measurement error variance to be specified in \code{sigma.sq.u}, see below.}

\item{family}{: a specified family/distribution.}

\item{sigma.sq.u}{: measurement error (ME) variance. A scalar if there is only one error-contaminated predictor variable, otherwise this must be stored as a covariance matrix.}

\item{sigma.sq.e}{: variance of the true predictor (\eqn{X}).}

\item{B}{: the number of Monte Carlo replication values (default is set to 50).}

\item{epsilon}{: a set convergence threshold (default is set to 0.00001).}

\item{silent}{: if \code{TRUE}, the convergence message (which tells the user if the model has converged and reports the number of iterations required) is suppressed (default is set to \code{FALSE}).}

\item{theta.est}{: an initial value for the dispersion parameter (this is required for fitting negative binomial models).}

\item{shape.est}{: an initial value for the shape parameter (this is required for fitting gamma models).}

\item{...}{: further arguments passed to \code{lm} or \code{glm}.}
}
\value{
\code{MCEMfit_glm} returns the naive fitted model object where coefficient estimates, the covariance matrix, fitted values, the log-likelihood, and residuals have been replaced with the final MCEM model fit. Standard errors and the effective sample size (which diagnose how closely the proposal distribution matches the posterior, see equation (2) of Stoklosa, Hwang and Warton) have also been included as outputs.
}
\description{
Function for wrapping the MCEM algorithm on GLMs where predictors are subject to measurement error/error-in-variables.
}
\examples{
# A GLM example I - binary response data.

library(refitME)

data(Framinghamdata)

glm_naiv <- glm(Y ~ w1 + z1 + z2 + z3, x = TRUE, family = binomial, data = Framinghamdata)

# The error-contaminated predictor in this example is systolic blood pressure (w1).

sigma.sq.u <- 0.01259/2 # ME variance, as obtained from Carroll et al. (2006) monograph.

B <- 100  # The number of Monte Carlo replication values.

glm_MCEM <- refitME(glm_naiv, sigma.sq.u, B)



# A GLM example II - presence-only data using a point-process model.

library(caret)

data(Corymbiaeximiadata)
dat <- Corymbiaeximiadata

Y1 <- dat$Y.obs

Rain <- dat$Rain
D.Main <- dat$D.Main
MNT <- dat$MNT    # The error-contaminated predictor (max temperature).

# PPM - using a Poisson GLM.

p.wt <- rep(1.e-6, length(Y1))
p.wt[Y1 == 0] <- 1

Y <- Y1/p.wt

X <- cbind(MNT, Rain, sqrt(D.Main))

colnames(X) <- c("w1", "z1", "z2")

dat1 <- data.frame(cbind(Y, p.wt, X))
colnames(dat1)[1:2] <- c("Y", "p.wt")

PPM_naiv <- glm(Y ~ poly(w1, degree = 2, raw = TRUE) +
                    poly(z1, degree = 2, raw = TRUE) +
                    poly(z2, degree = 2, raw = TRUE),
                    family = "poisson", weights = p.wt, data = dat1)

# PPM - using MCEM model.

sigma.sq.u <- 0.25  # Measurement error variance.

PPM_MCEM <- refitME(PPM_naiv, sigma.sq.u)

coord.dat <- cbind(dat$X, dat$Y)

colnames(coord.dat) <- c("Longitude", "Latitude")

pred.dats <- as.data.frame(cbind(coord.dat[, 1], coord.dat[, 2],
  PPM_MCEM$fitted.values))

colnames(pred.dats) <- c("x", "y", "preds")

levelplot(preds ~ x + y, data = pred.dats, asp = "iso", ylab = "Latitude",
  xlab = "Longitude", col.regions = heat.colors(1024)[900:1], cuts = 900,
  main = list("", cex = 5), scales = list(y = list(draw = FALSE),
  x = list(draw = FALSE), relation = "free"),
  colorkey = list(labels = list(cex = 0.8)))

}
\references{
Carroll, R. J., Ruppert, D., Stefanski, L. A., and Crainiceanu, C. M. (2006). \emph{Measurement Error in Nonlinear Models: A Modern Perspective.} 2nd Ed. London: Chapman & Hall/CRC.

Stoklosa, J., Hwang, W-H., and Warton, D.I. \pkg{refitME}: Measurement Error Modelling using Monte Carlo Expectation Maximization in \proglang{R}.
}
\seealso{
\code{\link{MCEMfit_gam}}
}
\author{
Jakub Stoklosa, Wen-Han Hwang and David I. Warton.
}
