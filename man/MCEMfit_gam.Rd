% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/refitME_package.R
\name{MCEMfit_gam}
\alias{MCEMfit_gam}
\title{MCEMfit_gam}
\source{
See \url{https://github.com/JakubStats/refitME} for an RMarkdown tutorial with examples.
}
\usage{
MCEMfit_gam(
  mod,
  family,
  sigma.sq.u,
  W = NULL,
  sigma.sq.e = 1,
  B = 50,
  epsilon = 1e-05,
  theta.est = 1,
  shape.est = 10,
  ...
)
}
\arguments{
\item{mod}{: a gam object (this is the naive fitted model). Make sure the first input predictor variables are the selected error-contaminated variable (i.e., the \code{W}'s).}

\item{family}{: a specified family/distribution.}

\item{sigma.sq.u}{: measurement error variance. A scalar if there is only one error-contaminated variable, otherwise this must stored as a covariance matrix.}

\item{W}{: a matrix of error-contaminated covariates (if not specified, the default assumes all covariates in the naive fitted model are error-contaminated).}

\item{sigma.sq.e}{: variance of the true covariate (X).}

\item{B}{: the number of Monte Carlo replication values (default is set to 50).}

\item{epsilon}{: convergence threshold (default is set to 0.00001).}

\item{theta.est}{: an initial value for the dispersion parameter (this is required for fitting negative binomial models).}

\item{shape.est}{: an initial value for the shape parameter (this is required for fitting gamma models).}

\item{...}{: further arguments passed to \code{gam}.}
}
\value{
\code{MCEMfit_gam} returns the naive fitted model object where coefficient estimates and the covariance matrix have been replaced with the final MCEM model fit. Standard errors, measurement error variance, the entropy term and the effective sample size (which diagnose how closely the proposal distribution matches the posterior, see equation (2) of Stoklosa, Hwang and Warton) have been additional included.
}
\description{
Function for wrapping the MCEM algorithm on GAMs where covariates are subject to measurement error/error-in-variables.
}
\examples{
# A GAM example using the air pollution data set from the SemiPar package.

library(refitME)
library(SemiPar)

B <- 5  # Consider increasing this if you want a more accurate answer.

data(milan.mort)

dat.air <- milan.mort

Y <- dat.air[, 6]  # Mortality counts.

n <- length(Y)

z1 <- (dat.air[, 1])
z2 <- (dat.air[, 4])
z3 <- (dat.air[, 5])
w1 <- log(dat.air[, 9])
W <- as.matrix(w1)

dat <- data.frame(cbind(Y, z1, z2, z3, w1))

sigma.sq.u <- 0.0915

gam_naiv1 <- gam(Y ~ s(w1) + s(z1, k = 25) + s(z2) + s(z3), family = "poisson", data = dat)

#gam_MCEM1 <- refitME(gam_naiv1, sigma.sq.u, W, B)

}
\references{
Ganguli, B, Staudenmayer, J., and Wand, M. P. (2005). Additive models with predictors subject to measurement error. \emph{Australian & New Zealand Journal of Statistics}, \strong{47}, 193â€“202.

Wand, M. P. (2018). \pkg{SemiPar}: Semiparametic Regression. \proglang{R} package version 1.0-4.2., URL \url{https: //CRAN.R-project.org/package=SemiPar}.

Stoklosa, J., Hwang, W-H., and Warton, D.I. \pkg{refitME}: Measurement Error Modelling using Monte Carlo Expectation Maximization in \proglang{R}.
}
\seealso{
\code{\link{MCEMfit_glm}}
}
\author{
Jakub Stoklosa and David I. Warton.
}
